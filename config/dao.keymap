/*
 * Copyright (c) 2021 Rafael Yumagulov
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>

#define FAST_MOUSE_MOVE 2000
#define FAST_UP MOVE_VERT(-FAST_MOUSE_MOVE)
#define FAST_DOWN MOVE_VERT(FAST_MOUSE_MOVE)
#define FAST_LEFT MOVE_HOR(-FAST_MOUSE_MOVE)
#define FAST_RIGHT MOVE_HOR(FAST_MOUSE_MOVE)

#define MOUSE_SCRF_MAX 100
#define SCRL_UP SCROLL_VERT(MOUSE_SCRF_MAX)
#define SCRL_DOWN SCROLL_VERT(-MOUSE_SCRF_MAX)
#define SCRL_LEFT SCROLL_HOR(-MOUSE_SCRF_MAX)
#define SCRL_RIGHT SCROLL_HOR(MOUSE_SCRF_MAX)

#define DEF 0
#define LWR 1
#define RSE 2

&lt {
    quick_tap_ms = <200>;
};

&mt {
    quick_tap_ms = <200>;
};

&mmv {
    time-to-max-speed-ms = <2000>;
    acceleration-exponent=<1>;
};

&mwh {
    time-to-max-speed-ms = <2000>;
    acceleration-exponent=<1>;
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {

            bindings = <
            &kp ESC     &kp N1  &kp N2  &kp N3  &kp N4  &kp N5  &kp N6  &kp N7  &kp N8      &kp N9  &kp N0      &kp BSPC
&kp LWIN    &kp GRAVE   &kp Q   &kp W   &kp E   &kp R   &kp T   &kp Y   &kp U   &kp I       &kp O   &kp P       &kp LBKT        &mt RWIN RBKT
            &kp LCTRL   &kp A   &kp S   &kp D   &kp F   &kp G   &kp H   &kp J   &kp K       &kp L   &kp SEMI    &mt RCTRL SQT
            &kp LALT    &kp Z   &kp X   &kp C   &kp V   &kp B   &kp N   &kp M   &kp COMMA   &kp DOT &kp FSLH    &mt RALT BSLH
            &mt LSHFT BSPC      &lt RSE TAB     &lt LWR SPACE   &lt LWR SPACE   &lt RSE RET         &mt RSHFT DEL
            >;
        };

        lower_layer {

            bindings = <
        &trans  &trans  &kp C_VOL_DN    &kp C_MUTE  &kp C_VOL_UP    &trans          &trans      &kp C_PREV  &kp C_PP    &kp C_NEXT  &trans  &trans
&trans  &trans  &trans  &kp PG_DN       &kp UP     &kp PG_UP        &trans          &trans      &kp HOME    &kp UP      &kp END     &trans  &trans  &trans
        &trans  &trans  &kp LEFT        &kp DOWN   &kp RIGHT        &kp C_BRI_DN    &kp EQUAL   &kp LEFT    &kp DOWN    &kp RIGHT   &trans  &trans
        &trans  &trans  &trans          &trans      &trans          &kp C_BRI_UP    &kp PLUS    &kp MINUS   &trans      &trans      &trans  &trans
        &trans  &trans  &trans          &trans      &trans          &trans
            >;
        };

        raise_layer {

            bindings = <
        &trans  &kp F1  &kp F2          &kp F3          &kp F4          &kp F5  &kp F6  &kp F7          &kp F8          &kp F9          &kp F10 &kp F11
&trans  &trans  &trans  &mkp RCLK       &mwh SCRL_UP    &mkp LCLK       &trans  &trans  &mkp LCLK       &mmv FAST_UP    &mkp RCLK       &trans  &kp F12 &trans
        &trans  &trans  &mwh SCRL_LEFT  &mwh SCRL_DOWN  &mwh SCRL_RIGHT &trans  &trans  &mmv FAST_LEFT  &mmv FAST_DOWN  &mmv FAST_RIGHT &trans  &trans
        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans          &trans  &trans  &trans
            >;
        };
    };
};